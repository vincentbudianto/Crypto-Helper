{"version":3,"sources":["backend/fullVigenere.js","backend/autoKeyVigenere.js","backend/extendedVigenere.js","backend/playfair.js","backend/superEncryption.js","backend/affine.js","backend/hill.js","logo.png","backend/util/string.js","backend/enigma.js","Components/Encrypt/Encrypt.js","Components/Decrypt/Decrypt.js","Components/Enigma/Enigma.js","Components/BottomBar/BottomBar.js","Components/NavigationBar/NavigationBar.js","Components/Title/Title.js","Components/Routes/Router.js","global.js","theme.js","Components/switch.js","App.js","useDarkMode.js","serviceWorker.js","index.js","backend/vigenere.js"],"names":["string","require","charTable","module","exports","encrypt","plaintext","key","isString","P","toNumbers","K","i","length","Kn","mod","toAlphabet","decrypt","ciphertext","C","indexOf","index","push","toASCII","generateKey","removeNonAlphabet","replaceCharacters","secretKey","removeDuplicates","matrix","Array","j","k","l","getPos","input","out","found","bigram","this","pos1","pos2","join","vigenere","generateTable","temp","Math","ceil","sqrt","removeNonAlphabetException","keyDigits","split","m","parseInt","b","isNaN","modInverse","math","modMatrixInverse","n","determinant","det","round","invDet","invMat","inv","multiply","mK","mC","mP","slice","toAlphabetHill","mKinv","toNumbersHill","a","replace","toUpperCase","removeNonAlphabetHill","filter","char","pos","self","search","regex","RegExp","charCodeAt","toNumbersException","String","fromCharCode","res","floor","s","NaN","x","y","tempDigram","charAt","formatOutput","substr","getReflector","reflector","getNotch","rotorType","notch","getRotor","secret","getSecretkey","alphabet","getPlugboard","plugboard","cipher","wheel","wiring","rotor","secretkey","shift","includes","turn","c","d","fileReader","BottomBar","className","href","Component","NavigationBar","to","color","Title","Fragment","src","logo","alt","width","str","fVigenere","aKeyVigenere","eVigenere","playfair","sEncryption","affine","hill","selectStyles","option","provided","state","borderRadius","selectOptions","value","label","Encrypt","method","undefined","methodName","selectedFile","fileType","fileName","text","onTextChange","event","setState","target","onKeyChange","onMethodChange","document","getElementById","placeholder","onFileChange","files","name","type","handleFileRead","e","content","result","encrypted","innerHTML","style","display","typedArray","Uint8Array","array","encryptedBuffer","downloadExtended","element","createElement","file","Blob","URL","createObjectURL","download","body","appendChild","click","remove","handleEncrypt","preventDefault","FileReader","onloadend","readAsArrayBuffer","readAsText","styles","theme","colors","primary50","primary25","primary","options","onChange","onSubmit","id","rows","htmlFor","icon","readOnly","onClick","closeModal","Decrypt","decrypted","decryptedBuffer","handleDecrypt","enigma","selectWheel","Enigma","onRotorChange","onWheelChange","onWiringChange","handleCipher","console","log","defaultValue","Router","exact","path","render","component","GlobalStyles","createGlobalStyle","lightTheme","toggleBorder","gradient","darkTheme","Switch","toggleTheme","isLight","checked","library","add","faLock","faLockOpen","faUnlock","faFile","faFileUpload","faCloudDownloadAlt","faTimesCircle","App","useState","setTheme","componentMounted","setComponentMounted","setMode","mode","window","localStorage","setItem","useEffect","localTheme","getItem","matchMedia","matches","useDarkMode","themeMode","lineColor","params","particles","number","line_linked","shadow","enable","blur","interactivity","events","onhover","onclick","basename","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3ef1877a.chunk.js","sourcesContent":["/* Vigenere encription & decription */\r\nlet string = require('./util/string')\r\n\r\nlet charTable = require('./util/charTable.json')\r\n\r\nmodule.exports = {\r\n    /**\r\n     * Encrypts with formula : Ci = custom char table[ki][Pi]\r\n     * @param {String} plaintext\r\n     * @param {String} key\r\n     * @returns {String} - Ciphertext\r\n     */\r\n    encrypt: function(plaintext, key) {\r\n        if (string.isString(plaintext) && string.isString(key)) {\r\n            // Convert string to order number\r\n            let P = string.toNumbers(plaintext);\r\n            let K = string.toNumbers(key);\r\n\r\n            for (let i = 0; i < P.length; i++) {\r\n                let Kn = K[string.mod(i, K.length)]; // charTable index by Ki\r\n\r\n                P[i] = charTable[Kn][P[i]];\r\n            }\r\n\r\n            let out = string.toAlphabet(P);\r\n\r\n            return out;\r\n        } else {\r\n            return \"INPUT ERROR\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Decrypts with formula : Pi = custom char table[ki].indexof(Ci)\r\n     * @param {String} ciphertext\r\n     * @param {String} key\r\n     * @returns {String} - Plaintext\r\n     */\r\n    decrypt: function(ciphertext, key) {\r\n        if (string.isString(ciphertext) && string.isString(key)) {\r\n            // Convert string to order number\r\n            let C = string.toNumbers(ciphertext);\r\n            let K = string.toNumbers(key);\r\n\r\n            for (let i = 0; i < C.length; i++) {\r\n                let Kn = K[string.mod(i, K.length)]; // charTable index by Ki\r\n\r\n                C[i] = charTable[Kn].indexOf(C[i]);\r\n            }\r\n\r\n            let out = string.toAlphabet(C);\r\n\r\n            return out;\r\n        } else {\r\n            return \"INPUT ERROR\";\r\n        }\r\n    }\r\n}","/* Vigenere encription & decription */\r\nlet string = require('./util/string')\r\n\r\nmodule.exports = {\r\n    /**\r\n     * Encrypts with formula : Ci = Pi + ki (mod 26), key is extended\r\n     * @param {String} plaintext\r\n     * @param {String} key\r\n     * @returns {String} - Ciphertext\r\n     */\r\n    encrypt: function(plaintext, key) {\r\n        if (string.isString(plaintext) && string.isString(key)) {\r\n            // Convert string to order number\r\n            let P = string.toNumbers(plaintext);\r\n            let K = string.toNumbers(key);\r\n\r\n            // Add key until same length\r\n            let index = 0;\r\n\r\n            while (K.length < P.length) {\r\n                K.push(P[index]);\r\n                index++;\r\n            }\r\n\r\n            for (let i = 0; i < P.length; i++) {\r\n                P[i] = string.mod((P[i] + K[i]), 26);\r\n            }\r\n\r\n            let out = string.toAlphabet(P);\r\n\r\n            return out;\r\n        } else {\r\n            return \"INPUT ERROR\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Decrypts with formula : Pi = Ci - ki (mod 26), key is extended\r\n     * @param {String} ciphertext\r\n     * @param {String} key\r\n     * @returns {String} - Plaintext\r\n     */\r\n    decrypt: function(ciphertext, key) {\r\n        if (string.isString(ciphertext) && string.isString(key)) {\r\n            // Convert string to order number\r\n            let C = string.toNumbers(ciphertext);\r\n            let K = string.toNumbers(key);\r\n\r\n            for (let i = 0; i < C.length; i++) {\r\n                C[i] = string.mod((C[i] - K[i]), 26);\r\n                K.push(C[i]);\r\n            }\r\n\r\n            let out = string.toAlphabet(C);\r\n\r\n            return out;\r\n        } else {\r\n            return \"INPUT ERROR\";\r\n        }\r\n    }\r\n}","/* Vigenere encription & decription */\r\nvar string = require('./util/string')\r\n\r\nmodule.exports = {\r\n    /**\r\n     * Encrypts with formula : Ci = Pi + ki (mod 256)\r\n     * @param {String} plaintext\r\n     * @param {String} key\r\n     * @returns {String} - Ciphertext\r\n     */\r\n    encrypt: function(plaintext, key) {\r\n        // Convert string to ASCII\r\n        let P = plaintext;\r\n        let K = key;\r\n\r\n        if (typeof plaintext == \"string\") P = string.toASCII(plaintext);\r\n\r\n        if (typeof key == \"string\") K = string.toASCII(key);\r\n\r\n        for (var i = 0; i < P.length; i++) {\r\n            P[i] = string.mod((P[i] + K[string.mod(i, K.length)]), 256);\r\n        }\r\n\r\n        return P;\r\n    },\r\n\r\n    /**\r\n     * Decrypts with formula : Pi = Ci - ki (mod 26)\r\n     * @param {String} ciphertext\r\n     * @param {String} key\r\n     * @returns {String} - Plaintext\r\n     */\r\n    decrypt : function(ciphertext, key) {\r\n        // Convert string to ASCII\r\n        let C = ciphertext;\r\n        let K = key;\r\n\r\n        if (typeof ciphertext == \"string\") C = string.toASCII(ciphertext);\r\n\r\n        if (typeof key == \"string\") K = string.toASCII(key);\r\n\r\n        for (var i = 0; i < C.length; i++) {\r\n            C[i] = string.mod((C[i] - K[string.mod(i, K.length)]), 256);\r\n        }\r\n\r\n        return C;\r\n    }\r\n}","/* Playfair encription & decription */\r\nlet string = require('./util/string')\r\n\r\nmodule.exports = {\r\n    /**\r\n     * Generate secret key with rules :\r\n\t * 1. Remove all letter J from key\r\n\t * 2. Add all missing alphabet from key except letter J\r\n\t * 3. Insert key into the 5x5 square\r\n     * @param {String} key\r\n     * @returns {2dArray} - Secretkey\r\n     */\r\n\tgenerateKey: function (key) {\r\n\t\tkey = string.removeNonAlphabet(key);\r\n\t\tkey = string.replaceCharacters(key, \"J\", \"\");\r\n\r\n\t\tlet i = 0;\r\n\t\tlet alphabet = \"ABCDEFGHIKLMNOPQRSTUVWXYZ\";\r\n\t\tlet secretKey = string.removeDuplicates(key + alphabet);\r\n\r\n\t\t// Initilize matrix\r\n\t\tlet matrix = new Array(5);\r\n\r\n\t\tfor (let j = 0; j < matrix.length; j++) {\r\n\t\t\tmatrix[j] = new Array(5);\r\n\t\t}\r\n\r\n\t\t// Initilize matrix's elements\r\n\t\tfor (let k = 0; k < matrix.length; k++) {\r\n\t\t\tfor (let l = 0; l < matrix[k].length; l++) {\r\n\t\t\t\tmatrix[k][l] = secretKey[i];\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn matrix;\r\n\t},\r\n\r\n    /**\r\n     * Find letter position (x,y) in secretkey matrix\r\n     * @param {Array} matrix\r\n     * @param {String} input\r\n     * @returns {Array} - Position\r\n     */\r\n\tgetPos: function (matrix, input) {\r\n\t\tlet out = new Array(2);\r\n\t\tlet i = 0;\r\n\t\tlet found = false;\r\n\r\n\t\twhile (!found && (i < matrix.length)) {\r\n\t\t\tlet j = 0;\r\n\r\n\t\t\twhile (!found && (j < matrix[i].length)) {\r\n\t\t\t\tif (matrix[i][j] === input) {\r\n\t\t\t\t\tout[0] = i;\r\n\t\t\t\t\tout[1] = j;\r\n\t\t\t\t\tfound = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tj++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ti++;\r\n\t\t}\r\n\r\n\t\treturn out;\r\n\t},\r\n\r\n    /**\r\n     * Encrypts with rules :\r\n\t * 1. Replace all letter J with letter I\r\n\t * 2. Write a message in letter pairs (bigram)\r\n\t * 3. There should not be the same letter pairs. If there is, insert letter X in the center\r\n\t * 4. If the number of letters is odd, add letter X at the end\r\n\t * 5. If two letters are on the same key line, then each letter is replaced with the letter to the right (cyclic)\r\n\t * 6. If two letters are in the same key column, each letter is replaced with a letter under it (cyclic)\r\n\t * 7. If two letters are not in the same row or column, then :\r\n\t * \t  • The first letter is replaced with the letter at the intersection of the first letter row with the second letter column\r\n\t *\t  • The second letter is replaced with the letter at the fourth corner of the rectangle formed from the three letters used so far\r\n     * @param {String} plaintext\r\n     * @param {String} key\r\n     * @returns {String} - Ciphertext\r\n     */\r\n\tencrypt: function (plaintext, key) {\r\n\t\tif (string.isString(plaintext) && string.isString(key)) {\r\n\t\t\tplaintext = string.replaceCharacters(plaintext, \"J\", \"I\");\r\n\r\n\t\t\tlet out = [];\r\n\t\t\tlet P = string.bigram(plaintext);\r\n\t\t\tlet K = this.generateKey(key);\r\n\r\n\t\t\tfor (let i = 0; i < P.length; i++) {\r\n\t\t\t\tlet pos1 = this.getPos(K, P[i][0]);\r\n\t\t\t\tlet pos2 = this.getPos(K, P[i][1]);\r\n\r\n\t\t\t\tif (pos1[0] == pos2[0]) {\r\n\t\t\t\t\tout.push(K[pos1[0]][string.mod((pos1[1] + 1), 5)] + K[pos2[0]][string.mod((pos2[1] + 1), 5)])\r\n\t\t\t\t} else if (pos1[1] == pos2[1]) {\r\n\t\t\t\t\tout.push(K[string.mod((pos1[0] + 1), 5)][pos1[1]] + K[string.mod((pos2[0] + 1), 5)][pos2[1]])\r\n\t\t\t\t} else {\r\n\t\t\t\t\tout.push(K[pos1[0]][pos2[1]] + K[pos2[0]][pos1[1]])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn out.join(\"\");\r\n\t\t} else {\r\n\t\t\treturn \"INPUT ERROR\";\r\n\t\t}\r\n\t},\r\n\r\n    /**\r\n     * Decrypts with rules :\r\n\t * 1. If two letters are on the same square row then each letter is replaced with a letter to its left\r\n\t * 2. If two letters are in the same square column then each letter is replaced with a letter above it\r\n\t * 3. If two letters are not in the same row or the same column, then :\r\n\t *    • The first letter is replaced with the letter at the intersection of the first letter row with the second letter column\r\n\t *    • The second letter is replaced with the letter at the fourth vertex of the rectangle formed from the three letters used so far\r\n\t * 4. Throw away any letter X which has no meaning\r\n     * @param {String} ciphertext\r\n     * @param {String} key\r\n     * @returns {String} - Plaintext\r\n     */\r\n\tdecrypt: function (ciphertext, key) {\r\n\t\tif (string.isString(ciphertext) && string.isString(key)) {\r\n\t\t\tlet out = [];\r\n\t\t\tlet C = string.bigram(ciphertext);\r\n\t\t\tlet K = this.generateKey(key);\r\n\r\n\t\t\tfor (let i = 0; i < C.length; i++) {\r\n\t\t\t\tlet pos1 = this.getPos(K, C[i][0]);\r\n\t\t\t\tlet pos2 = this.getPos(K, C[i][1]);\r\n\r\n\t\t\t\tif (pos1[0] == pos2[0]) {\r\n\t\t\t\t\tout.push(K[pos1[0]][string.mod((pos1[1] - 1), 5)] + K[pos2[0]][string.mod((pos2[1] - 1), 5)])\r\n\t\t\t\t} else if (pos1[1] == pos2[1]) {\r\n\t\t\t\t\tout.push(K[string.mod((pos1[0] - 1), 5)][pos1[1]] + K[string.mod((pos2[0] - 1), 5)][pos2[1]])\r\n\t\t\t\t} else {\r\n\t\t\t\t\tout.push(K[pos1[0]][pos2[1]] + K[pos2[0]][pos1[1]])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn out.join(\"\");\r\n\t\t} else {\r\n\t\t\treturn \"INPUT ERROR\";\r\n\t\t}\r\n\t}\r\n}","/* Super encription & decription */\r\nlet string = require('./util/string')\r\nlet vigenere = require('./vigenere')\r\n\r\nmodule.exports = {\r\n    /**\r\n     * Generate matrix filled with alphabet :\r\n     * @param {String} input\r\n     * @param {Number} k\r\n     * @returns {2dArray} - Transposedtext\r\n     */\r\n\tgenerateTable: function (input, k) {\r\n\t\tlet i = 0;\r\n\r\n\t\t// Initilize matrix\r\n\t\tlet matrix = new Array(k);\r\n\r\n\t\tfor (let j = 0; j < matrix.length; j++) {\r\n\t\t\tmatrix[j] = new Array(k);\r\n\t\t}\r\n\r\n\t\t// Initilize matrix's elements\r\n\t\tfor (let k = 0; k < matrix.length; k++) {\r\n\t\t\tfor (let l = 0; l < matrix[k].length; l++) {\r\n\t\t\t\tif (i < input.length) {\r\n\t\t\t\t\tmatrix[k][l] = input[i];\r\n\t\t\t\t\ti++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmatrix[k][l] = \"?\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn matrix;\r\n\t},\r\n\r\n\t/**\r\n\t * Encrypts with steps :\r\n\t * 1. Encrypt using substitution cipher\r\n\t * 2. Encrypt using transposition cipher\r\n\t * @param {String} plaintext\r\n\t * @param {String} key\r\n\t * @returns {String} - Ciphertext\r\n\t */\r\n\tencrypt: function (plaintext, key) {\r\n\t\tif (string.isString(plaintext) && string.isString(key)) {\r\n\t\t\tplaintext = string.removeNonAlphabet(plaintext);\r\n\t\t\tkey = string.removeNonAlphabet(key);\r\n\r\n\t\t\tlet temp = vigenere.encrypt(plaintext, key);\r\n\t\t\tlet k = Math.ceil(Math.sqrt(temp.length));\r\n\t\t\tlet matrix = this.generateTable(temp, k);\r\n\t\t\tlet out = \"\";\r\n\r\n\t\t\tfor (let i = 0; i < k; i++) {\r\n\t\t\t\tfor (let j = 0; j < k; j++) {\r\n\t\t\t\t\tout += matrix[j][i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn out;\r\n\t\t} else {\r\n\t\t\treturn \"INPUT ERROR\";\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Decrypts with steps :\r\n\t * 1. Decrypt using transposition cipher\r\n\t * 2. Decrypt using substitution cipher\r\n\t * @param {String} ciphertext\r\n\t * @param {String} key\r\n\t * @returns {String} - Plaintext\r\n\t */\r\n\tdecrypt: function (ciphertext, key) {\r\n\t\tif (string.isString(ciphertext) && string.isString(key)) {\r\n\t\t\tciphertext = string.removeNonAlphabetException(ciphertext);\r\n\t\t\tkey = string.removeNonAlphabet(key);\r\n\r\n\t\t\tlet k = Math.ceil(Math.sqrt(ciphertext.length));\r\n\t\t\tlet matrix = this.generateTable(ciphertext, k);\r\n\t\t\tlet temp = \"\";\r\n\r\n\t\t\tfor (let i = 0; i < k; i++) {\r\n\t\t\t\tfor (let j = 0; j < k; j++) {\r\n\t\t\t\t\ttemp += matrix[j][i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet out = vigenere.decrypt(temp, key);\r\n\r\n\t\t\treturn out;\r\n\t\t} else {\r\n\t\t\treturn \"INPUT ERROR\";\r\n\t\t}\r\n\t}\r\n}","/* Affine encription & decription */\r\nlet string = require('./util/string')\r\n\r\nmodule.exports = {\r\n\t/**\r\n     * Encrypts with formula : C = m * P + b (mod 26)\r\n\t * @param {String} plaintext\r\n\t * @param {String} key\r\n\t * @returns {String} - Ciphertext\r\n\t */\r\n\tencrypt: function (plaintext, key) {\r\n\t\tif (string.isString(plaintext) && string.isString(key)) {\r\n\t\t\tlet keyDigits = key.split(\" \");\r\n\t\t\tlet m = parseInt(keyDigits[0]);\r\n\t\t\tlet b = parseInt(keyDigits[1]);\r\n\r\n\t\t\tif (!isNaN(string.modInverse(m, 26))) {\r\n            \t// Convert string to order number\r\n\t\t\t\tlet P = string.toNumbers(plaintext);\r\n\r\n\t\t\t\tfor (let i = 0; i < P.length; i++) {\r\n\t\t\t\t\tP[i] = string.mod((m * P[i] + b), 26);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet out = string.toAlphabet(P);\r\n\r\n\t\t\t\treturn out;\r\n\t\t\t} else {\r\n\t\t\t\treturn \"No modular inverse found !!!\";\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn \"INPUT ERROR\";\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n     * Decrypts with formula : P = m^(-1) (C - b) (mod 26)\r\n\t * @param {String} ciphertext\r\n\t * @param {String} key\r\n\t * @returns {String} - Plaintext\r\n\t */\r\n\tdecrypt: function (ciphertext, key) {\r\n\t\tif (string.isString(ciphertext) && string.isString(key)) {\r\n\t\t\tlet keyDigits = key.split(\" \");\r\n\t\t\tlet m = parseInt(keyDigits[0]);\r\n\t\t\tlet b = parseInt(keyDigits[1]);\r\n\r\n\t\t\tif (!isNaN(string.modInverse(m, 26))) {\r\n            \t// Convert string to order number\r\n\t\t\t\tlet C = string.toNumbers(ciphertext);\r\n\r\n\t\t\t\tfor (let i = 0; i < C.length; i++) {\r\n\t\t\t\t\tC[i] = string.mod((string.modInverse(m, 26) * (C[i] - b)), 26);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet out = string.toAlphabet(C);\r\n\r\n\t\t\t\treturn out;\r\n\t\t\t} else {\r\n\t\t\t\treturn \"No modular inverse found !!!\";\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn \"INPUT ERROR\";\r\n\t\t}\r\n\t}\r\n}","/* Hill encription & decription */\r\nlet math = require('mathjs');\r\nlet string = require('./util/string')\r\n\r\nmodule.exports = {\r\n    /**\r\n     * Finds the inverse of matrix (x) with formula: m * x (mod n) = I\r\n     * where I = Identity matrix\r\n     * @param {Array} matrix - a 3x3 matrix\r\n     * @param {Number} n - the modulo\r\n     * @returns {Array} - Inverse of matrix\r\n     */\r\n    modMatrixInverse: function(matrix, n) {\r\n        let determinant = math.det(matrix);\r\n\r\n        determinant = Math.round(determinant);\r\n\r\n        let invDet = string.modInverse(determinant, n);\r\n        let invMat = math.inv(matrix);\r\n\r\n        invMat = math.multiply(determinant, invMat);\r\n        invMat = math.round(invMat)\r\n        invMat = math.multiply(invDet, invMat);\r\n        invMat = math.mod(invMat, n);\r\n\r\n        return invMat;\r\n    },\r\n\r\n\t/**\r\n     * Encrypts with formula : mC = mK * mP (mod 26)\r\n     * with mC and mP is a 1x3 matrix and mK is 3x3 matrix\r\n\t * @param {String} plaintext\r\n\t * @param {String} key - with format \"%d %d %d %d %d %d %d %d %d\"\r\n\t * @returns {String} - Ciphertext\r\n\t */\r\n\tencrypt: function(plaintext, key) {\r\n\t\tif (string.isString(plaintext) && string.isString(key)) {\r\n            // Convert string key to matrix\r\n            let mK = [[0,0,0],[0,0,0],[0,0,0]];\r\n            let keyDigits = key.split(\" \");\r\n            let i = 0, j = 0, k = 0;\r\n\r\n            while (i < 3 && k < keyDigits.length) {\r\n                mK[i][j] = parseInt(keyDigits[k]);\r\n                j++;\r\n\r\n                if (j > 2) {\r\n                    j = 0;\r\n                    i++;\r\n                }\r\n\r\n                k++;\r\n            }\r\n\r\n            if (!isNaN(this.modMatrixInverse(mK, 28)[0][0])) {\r\n                // Convert plaintext to numbers\r\n                plaintext = string.toNumbers(plaintext);\r\n\r\n                let mC, mP = [0, 0, 0];\r\n                let out = \"\";\r\n\r\n                // Multiply mK to plaintext\r\n                i=0;\r\n\r\n                while (i < plaintext.length) {\r\n                    mP = plaintext.slice(i, i+3);\r\n\r\n                    while (mP.length < 3) mP.push(26);\r\n\r\n                    mC = math.multiply(mK, mP);\r\n                    mC = math.round(mC);\r\n                    mC = math.mod(mC, 28);\r\n                    out += string.toAlphabetHill(mC);\r\n                    i+=3;\r\n                }\r\n\r\n                return out;\r\n            } else {\r\n                return \"NO MODULAR INVERSE FOUND !!!\"\r\n            }\r\n\t\t} else {\r\n            return \"INPUT ERROR\";\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n     * Decrypts with formula : mP = mKinv * mP (mod 26)\r\n     * with mC and mP is a 1x3 matrix and mKinv is 3x3 matrix inverse of key\r\n     * @param {String} ciphertext\r\n     * @param {String} key - with format \"%d %d %d %d %d %d %d %d %d\"\r\n     * @returns {String} - Plaintext\r\n\t */\r\n    decrypt: function(ciphertext, key) {\r\n        if (string.isString(ciphertext) && string.isString(key)) {\r\n            // Convert string key to matrix\r\n            let mK = [[0,0,0],[0,0,0],[0,0,0]];\r\n            let keyDigits = key.split(\" \");\r\n            let i = 0, j = 0, k = 0;\r\n\r\n            while (i < 3 && k < keyDigits.length) {\r\n                mK[i][j] = parseInt(keyDigits[k]);\r\n                j++;\r\n\r\n                if (j > 2) {\r\n                    j = 0;\r\n                    i++;\r\n                }\r\n\r\n                k++;\r\n            }\r\n\r\n            // Find key inverse\r\n            let mKinv = this.modMatrixInverse(mK, 28)\r\n\r\n            if (!isNaN(mKinv[0][0])) {\r\n                // Convert ciphertext to numbers\r\n                ciphertext = string.toNumbersHill(ciphertext);\r\n\r\n                let mC, mP = [0, 0, 0];\r\n                let out = \"\";\r\n\r\n                // Multiply mK to plaintext\r\n                i=0;\r\n\r\n                while (i < ciphertext.length) {\r\n                    mC = ciphertext.slice(i, i+3);\r\n\r\n                    while (mC.length < 3) mC.push(26);\r\n\r\n                    mP = math.multiply(mKinv, mC);\r\n                    mP = math.round(mP);\r\n                    mP = math.mod(mP, 28);\r\n\r\n                    out += string.toAlphabetHill(mP);\r\n                    i+=3;\r\n                }\r\n\r\n                out = string.removeNonAlphabet(out);\r\n                return out;\r\n            } else {\r\n                return \"NO MODULAR INVERSE FOUND !!!\"\r\n            }\r\n\t\t} else {\r\n\t\t\treturn \"INPUT ERROR\";\r\n\t\t}\r\n\t}\r\n}","module.exports = __webpack_public_path__ + \"static/media/logo.2fc24170.png\";","/* All string-related utility function is stored here */\r\nlet a = \"A\";\r\n\r\nmodule.exports = {\r\n    /**\r\n     * Check if input type is string\r\n     * @param {String} input\r\n     * @returns {Boolean}\r\n     */\r\n    isString: function(input) {\r\n        return ((typeof input) == \"string\");\r\n    },\r\n\r\n    /**\r\n     * Removes all non alphabet and capitalize each letters (including spaces & newlines)\r\n     * @param {String} input\r\n     * @returns {String}\r\n     */\r\n    removeNonAlphabet : function (input) {\r\n        return input.replace(/[^a-zA-Z]/gi, '').toUpperCase();\r\n    },\r\n\r\n    /**\r\n     * Removes all non alphabet and capitalize each letters (including spaces & newlines except '?')\r\n     * @param {String} input\r\n     * @returns {String}\r\n     */\r\n    removeNonAlphabetException: function (input) {\r\n        return input.replace(/[^a-zA-Z?]/gi, '').toUpperCase();\r\n    },\r\n\r\n    /**\r\n     * Removes all non alphabet and capitalize each letters (including spaces & newlines except '?' and '#)\r\n     * @param {String} input\r\n     * @returns {String}\r\n     */\r\n    removeNonAlphabetHill: function (input) {\r\n        return input.replace(/[^a-zA-Z?#]/gi, '').toUpperCase();\r\n    },\r\n\r\n    /**\r\n     * Removes all duplicate characters\r\n     * @param {String} input\r\n     * @returns {String}\r\n     */\r\n    removeDuplicates: function(input) {\r\n        return input.split('').filter(function (char, pos, self) {\r\n            return self.indexOf(char) == pos;\r\n        }).join('');\r\n    },\r\n\r\n    /**\r\n     * Replace all specific characters with another character\r\n     * @param {String} input\r\n     * @param {String} search\r\n     * @param {String} replace\r\n     * @returns {String}\r\n     */\r\n    replaceCharacters: function(input, search, replace) {\r\n        let regex = new RegExp(search, \"gi\");\r\n\r\n        return input.replace(regex, replace.toUpperCase());\r\n    },\r\n\r\n    /**\r\n     * Converts all alphabet to its order in alphabet (e.g. J -> 10)\r\n     * @param {String} input - All characters must be upper case alphabet\r\n     * @returns {Array} - Array of order numbers\r\n     */\r\n    toNumbers: function(input) {\r\n        input = this.removeNonAlphabet(input);\r\n\r\n        let out = [];\r\n\r\n        for (let i = 0; i < input.length; i++) {\r\n            out.push(input.charCodeAt(i) - a.charCodeAt(0));\r\n        }\r\n\r\n        return out;\r\n    },\r\n\r\n    /**\r\n     * Converts all alphabet to its order in alphabet (e.g. J -> 10)\r\n     * @param {String} input - All characters must be upper case alphabet\r\n     * @returns {Array} - Array of order numbers\r\n     */\r\n    toNumbersException: function(input) {\r\n        input = this.removeNonAlphabetException(input);\r\n\r\n        let out = [];\r\n\r\n        for (let i = 0; i < input.length; i++) {\r\n            out.push(input.charCodeAt(i) - a.charCodeAt(0));\r\n        }\r\n\r\n        return out;\r\n    },\r\n\r\n    /**\r\n     * Converts all number order in alphabet to alphabet with ? -> 27 (e.g. 10 -> J)\r\n     * @param {Array} input - Array of order numbers\r\n     * @returns {String}\r\n     */\r\n    toNumbersHill: function (input) {\r\n        input = this.removeNonAlphabetHill(input);\r\n\r\n        let out = [];\r\n\r\n        for (let i = 0; i < input.length; i++) {\r\n            if (input[i] === \"?\") {\r\n                out.push(26);\r\n            } else if (input[i] === \"#\") {\r\n                out.push(27);\r\n            } else {\r\n                out.push(input.charCodeAt(i) - a.charCodeAt(0));\r\n            }\r\n        }\r\n\r\n        return out;\r\n    },\r\n\r\n    /**\r\n     * Converts all alphabet to ASCII\r\n     * @param {String} input - All characters must be upper case alphabet\r\n     * @returns {Array} - Array of order numbers\r\n     */\r\n    toASCII: function(input) {\r\n        let out = [];\r\n\r\n        for (var i = 0; i < input.length; i++) {\r\n            out.push(input.charCodeAt(i));\r\n        }\r\n\r\n        return out;\r\n    },\r\n\r\n    /**\r\n     * Converts all number order in alphabet to alphabet (e.g. 10 -> J)\r\n     * @param {Array} input - Array of order numbers\r\n     * @returns {String}\r\n     */\r\n    toAlphabet: function(input) {\r\n        let out = \"\";\r\n\r\n        for (let i = 0; i < input.length; i++) {\r\n            if (input[i] === 63) {\r\n                out += String.fromCharCode(input[i]);\r\n            } else {\r\n                out += String.fromCharCode(input[i] + a.charCodeAt(0));\r\n            }\r\n        }\r\n\r\n        return out;\r\n    },\r\n\r\n    /**\r\n     * Converts all number order in alphabet to alphabet with 27 -> ? (e.g. 10 -> J)\r\n     * @param {Array} input - Array of order numbers\r\n     * @returns {String}\r\n     */\r\n    toAlphabetHill: function(input) {\r\n        let out = \"\";\r\n\r\n        for (let i = 0; i < input.length; i++) {\r\n            if (input[i] === 26) {\r\n                out += \"?\";\r\n            } else if (input[i] === 27) {\r\n                out += \"#\";\r\n            } else {\r\n                out += String.fromCharCode(input[i] + a.charCodeAt(0));\r\n            }\r\n        }\r\n\r\n        return out;\r\n    },\r\n\r\n    /**\r\n     * Mod operator (eg: mod(-10, 26) = 16)\r\n     * @param {Number} a\r\n     * @param {Number} b\r\n     * @returns {Number}\r\n     */\r\n    mod: function(a, b) {\r\n        let res = a % b;\r\n\r\n        return Math.floor(res >= 0 ? res : this.mod(a + b, b));\r\n    },\r\n\r\n\t/**\r\n     * Modular inverse (eg: modinv(7, 26) = 15)\r\n\t * @param {Number} m\r\n\t * @param {Number} n\r\n\t * @returns {Number}\r\n\t */\r\n    modInverse: function (m, n) {\r\n        // Find gcd\r\n        const s = [];\r\n        let b = n;\r\n\r\n        while (m < 0) m+=n;\r\n\r\n        while (b) {\r\n            [m, b] = [b, m % b];\r\n            s.push({ m, b });\r\n        }\r\n\r\n        // Find inverse\r\n        if (m !== 1) {\r\n            return NaN;\r\n        } else {\r\n            let x = 1;\r\n            let y = 0;\r\n\r\n            for (let i = s.length - 2; i >= 0; --i) {\r\n                [x, y] = [y, x - y * Math.floor(s[i].m / s[i].b)];\r\n            }\r\n\r\n            return (y % n + n) % n;\r\n        }\r\n\t},\r\n\r\n    /**\r\n     * Arrange sentence to bigram\r\n     * @param {String} input\r\n     * @returns {Array} - Array of alphabets in pair\r\n     */\r\n    bigram: function(input) {\r\n        input = this.removeNonAlphabet(input);\r\n\r\n        let pos = 0;\r\n        let tempDigram = \"\";\r\n        let out = [];\r\n\r\n        while (pos < input.length) {\r\n            if (tempDigram.length == 0) {\r\n                tempDigram += input.charAt(pos);\r\n            } else if (tempDigram.length == 1) {\r\n                if (tempDigram.charAt(0) == input.charAt(pos)) {\r\n                    tempDigram += \"X\";\r\n                    pos--; // Stay at current position\r\n                } else {\r\n                    tempDigram += input.charAt(pos);\r\n                    out.push(tempDigram);\r\n                    tempDigram = \"\";\r\n                }\r\n            } else {\r\n                out.push(tempDigram);\r\n                tempDigram = \"\";\r\n                tempDigram += input.charAt(pos);\r\n            }\r\n\r\n            // Check last bigram length\r\n            if ((input.length % 2) != 0 && pos == (input.length - 1) && (tempDigram.length % 2) != 0) {\r\n                tempDigram += \"X\";\r\n                out.push(tempDigram);\r\n            } else if (pos == (input.length - 1) && tempDigram.length != 0) {\r\n                tempDigram = input.charAt(pos) + \"X\";\r\n                out.push(tempDigram);\r\n            }\r\n\r\n            pos++;\r\n        }\r\n\r\n        return out;\r\n    },\r\n\r\n    /**\r\n     * Splits the output into groups of n characters (n=5: ABCDEFG -> ABCDE FG)\r\n     * @param {String} input\r\n     * @returns {String}\r\n     */\r\n    formatOutput: function(input, n) {\r\n        let out = \"\";\r\n        for (let i=0; i<input.length; i+=n) {\r\n            out += input.substr(i, n) + \" \";\r\n        }\r\n        return out;\r\n    }\r\n}","/* Vigenere encription & decription */\r\nlet string = require('./util/string');\r\n\r\nmodule.exports = {\r\n\t/** Get reflector positions\r\n\t *      Rotor #\t\t\t\tABCDEFGHIJKLMNOPQRSTUVWXYZ\t\t\t Date \t\t\tIntroduced\tModel Name & Number\r\n\t *               UKW\t\tQYHOGNECVPUZTFDJAXWMKISRBL\t\t7 February 1941\t\t\tGerman Railway (Rocket)\r\n\t *             UKW-K\t\tIMETCGFRAYSQBZXWLHKDVUPOJN\t\t February 1939\t\t\t\t\tSwiss K\r\n\t *       Reflector A\t\tEJMZALYXVBWFCRQUONTSPIKHGD\r\n\t *       Reflector B\t\tYRUHQSLDPXNGOKMIEBFZCWVJAT\r\n\t *       Reflector C\t\tFVPJIAOYEDRZXWGCTKUQSBNMHL\r\n\t *  Reflector B Thin\t\tENKQAUYWJICOPBLMDXZVFTHRGS\t\t\t 1940\t\t\t\t\tM4 R1 (M3 + Thin)\r\n\t *  Reflector C Thin\t\tRDOBJNTKVEHMLFCWZAXGYIPSUQ\t\t\t 1940\t\t\t\t\tM4 R1 (M3 + Thin)\r\n\t * @param {String} reflector\r\n\t * @returns {Array} - Array of alphabets\r\n\t */\r\n\tgetReflector: function (reflector) {\r\n\t\tlet out;\r\n\r\n\t\tif (reflector === \"UKW\") {\r\n\t\t\tout = \"QYHOGNECVPUZTFDJAXWMKISRBL\".split(\"\");\r\n\t\t} else if (reflector === \"UKW - K\") {\r\n\t\t\tout = \"IMETCGFRAYSQBZXWLHKDVUPOJN\".split(\"\");\r\n\t\t} else if (reflector === \"Reflector A\") {\r\n\t\t\tout = \"EJMZALYXVBWFCRQUONTSPIKHGD\".split(\"\");\r\n\t\t} else if (reflector === \"Reflector B\") {\r\n\t\t\tout = \"YRUHQSLDPXNGOKMIEBFZCWVJAT\".split(\"\");\r\n\t\t} else if (reflector === \"Reflector C\") {\r\n\t\t\tout = \"FVPJIAOYEDRZXWGCTKUQSBNMHL\".split(\"\");\r\n\t\t} else if (reflector === \"Reflector B Thin\") {\r\n\t\t\tout = \"ENKQAUYWJICOPBLMDXZVFTHRGS\".split(\"\");\r\n\t\t} else if (reflector === \"Reflector C Thin\") {\r\n\t\t\tout = \"RDOBJNTKVEHMLFCWZAXGYIPSUQ\".split(\"\");\r\n\t\t} else {\r\n\t\t\tout = [];\r\n\t\t}\r\n\r\n\t\treturn out;\r\n\t},\r\n\r\n\t/**\r\n\t * Get turnover notch positions\r\n\t * \t  \tRotor\t\t\t\tNotch\t\t\t\t\t\t\t\tEffect\r\n\t *  \t\t    I\t\t\t  Q\t\t\tIf rotor steps from Q to R, the next rotor is advanced\r\n\t *  \t\t   II\t\t\t  E\t\t\tIf rotor steps from E to F, the next rotor is advanced\r\n\t *  \t\t  III\t\t\t  V\t\t\tIf rotor steps from V to W, the next rotor is advanced\r\n\t *  \t\t   IV\t\t\t  J\t\t\tIf rotor steps from J to K, the next rotor is advanced\r\n\t *  \t\t    V\t\t\t  Z\t\t\tIf rotor steps from Z to A, the next rotor is advanced\r\n\t *  VI, VII, VIII\t \t\t M+Z\t\tIf rotor steps from M to N, or from Z to A the next rotor is advanced\r\n\t * @param {String} rotorType\r\n\t * @returns {String} - Turnover notch\r\n\t */\r\n\tgetNotch: function (rotorType) {\r\n\t\tlet notch;\r\n\r\n\t\tif (rotorType === \"I\") {\r\n\t\t\tnotch = [\"Q\"];\r\n\t    } else if (rotorType === \"II\") {\r\n\t\t\tnotch = [\"E\"];\r\n\t    } else if (rotorType === \"III\") {\r\n\t     \tnotch = [\"V\"];\r\n\t    } else if (rotorType === \"IV\") {\r\n\t      \tnotch = [\"J\"];\r\n\t    } else if (rotorType === \"V\") {\r\n\t      \tnotch = [\"Z\"];\r\n\t    } else if (rotorType === \"VI\") {\r\n\t      \tnotch = [\"M\", \"Z\"];\r\n\t    } else if (rotorType === \"VII\") {\r\n\t      \tnotch = [\"M\", \"Z\"];\r\n\t\t} else if (rotorType === \"VIII\") {\r\n\t      \tnotch = [\"M\", \"Z\"];\r\n\t\t}\r\n\r\n\t    return notch;\r\n\t},\r\n\r\n\t/**\r\n\t * Get rotor wiring\r\n\t *\t\tRotor #\t\t\t\tABCDEFGHIJKLMNOPQRSTUVWXYZ\t\t\tDate \t\t\tIntroduced\tModel Name & Number\r\n\t *                IC\t\tDMTWSILRUYQNKFEJCAZBPGXOHV\t\t\t1924\t\t\t\tCommercial Enigma A, B\r\n\t *               IIC\t\tHQZGPJTMOBLNCIFDYAWVEUSRKX\t\t\t1924\t\t\t\tCommercial Enigma A, B\r\n\t *              IIIC\t\tUQNTLSZFMREHDPXKIBVYGJCWOA\t\t\t1924\t\t\t\tCommercial Enigma A, B\r\n\t * -------------------------------------------------------------------------------------------------------------\r\n\t *      Rotor #\t\t\t\tABCDEFGHIJKLMNOPQRSTUVWXYZ\t\t\tDate \t\t\tIntroduced\tModel Name & Number\r\n\t *        I (Rocket)\t\tJGDQOXUSCAMIFRVTPNEWKBLZYH\t\t7 February 1941\t\t\tGerman Railway (Rocket)\r\n\t *       II (Rocket)\t\tNTZPSFBOKMWRCJDIVLAEYUXHGQ\t\t7 February 1941\t\t\tGerman Railway (Rocket)\r\n\t *      III (Rocket)\t\tJVIUBHTCDYAKEQZPOSGXNRMWFL\t\t7 February 1941\t\t\tGerman Railway (Rocket)\r\n\t *               ETW\t\tQWERTZUIOASDFGHJKPYXCVBNML\t\t7 February 1941\t\t\tGerman Railway (Rocket)\r\n\t * -------------------------------------------------------------------------------------------------------------\r\n\t *      Rotor #\t\t\t\tABCDEFGHIJKLMNOPQRSTUVWXYZ\t\t\tDate \t\t\tIntroduced\tModel Name & Number\r\n\t *               I-K\t\tPEZUOHXSCVFMTBGLRINQJWAYDK\t\t February 1939\t\t\t\t\tSwiss K\r\n\t *              II-K\t\tZOUESYDKFWPCIQXHMVBLGNJRAT\t\t February 1939\t\t\t\t\tSwiss K\r\n\t *             III-K\t\tEHRVXGAOBQUSIMZFLYNWKTPDJC\t\t February 1939\t\t\t\t\tSwiss K\r\n\t *             ETW-K\t\tQWERTZUIOASDFGHJKPYXCVBNML\t\t February 1939\t\t\t\t\tSwiss K\r\n\t * -------------------------------------------------------------------------------------------------------------\r\n\t *      Rotor #\t\t\t\tABCDEFGHIJKLMNOPQRSTUVWXYZ\t\t\tDate \t\t\tIntroduced\tModel Name & Number\r\n\t *      I (Enigma I)\t\tEKMFLGDQVZNTOWYHXUSPAIBRCJ\t\t\t1930\t\t\t\t\t\tEnigma I\r\n\t *     II (Enigma I)\t\tAJDKSIRUXBLHWTMCQGZNPYFVOE\t\t\t1930\t\t\t\t\t\tEnigma I\r\n\t *    III (Enigma I)\t\tBDFHJLCPRTXVZNYEIWGAKMUSQO\t\t\t1930\t\t\t\t\t\tEnigma I\r\n\t *                IV\t\tESOVPZJAYQUIRHXLNFTGKDCMWB\t\t December 1938\t\t\t\t\tM3 Army\r\n\t *                 V\t\tVZBRGITYUPSDNHLXAWMJQOFECK\t\t December 1938\t\t\t\t\tM3 Army\r\n\t *                VI\t\tJPGVOUMFYQBENHZRDKASXLICTW\t\t\t1939\t\t\t\tM3 & M4 Naval (FEB 1942)\r\n\t *               VII\t\tNZJHGRCXMYSWBOUFAIVLPEKQDT\t\t\t1939\t\t\t\tM3 & M4 Naval (FEB 1942)\r\n\t *              VIII\t\tFKQHTLXOCBJSPDZRAMEWNIUYGV\t\t\t1939\t\t\t\tM3 & M4 Naval (FEB 1942)\r\n\t * -------------------------------------------------------------------------------------------------------------\r\n\t *      Rotor #\t\t\t\tABCDEFGHIJKLMNOPQRSTUVWXYZ\t\t\tDate \t\t\tIntroduced\tModel Name & Number\r\n\t *              Beta\t\tLEYJVCNIXWPBQMDRTAKZGFUHOS\t\t  Spring 1941\t\t\t\t\t M4 R2\r\n\t *             Gamma\t\tFSOKANUERHMBTIYCWLQPZXVGJD\t\t  Spring 1942\t\t\t\t\t M4 R2\r\n\t *               ETW\t\tABCDEFGHIJKLMNOPQRSTUVWXYZ\t\t\t\t\t\t\t\t\t\tEnigma I\r\n\t * @param {String} rotorType\r\n\t * @param {String} key\r\n\t * @returns {Array} - Rotor wiring\r\n\t */\r\n\tgetRotor: function (rotorType, key) {\r\n\t\tlet alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n\t\tlet x = alphabet.indexOf(key);\r\n\t\tlet res = \"\";\r\n\r\n\t\tif (rotorType === \"I\") {\r\n\t\t\tlet secret = \"EKMFLGDQVZNTOWYHXUSPAIBRCJ\";\r\n\r\n\t\t\tres += secret.slice(x, 26) + secret.slice(0, x);\r\n\t\t} else if (rotorType === \"II\") {\r\n\t\t\tlet secret = \"AJDKSIRUXBLHWTMCQGZNPYFVOE\";\r\n\r\n\t\t\tres += secret.slice(x, 26) + secret.slice(0, x);\r\n\t    } else if (rotorType === \"III\") {\r\n\t\t\tlet secret = \"BDFHJLCPRTXVZNYEIWGAKMUSQO\";\r\n\r\n\t\t\tres += secret.slice(x, 26) + secret.slice(0, x);\r\n\t    } else if (rotorType === \"IV\") {\r\n\t\t\tlet secret = \"ESOVPZJAYQUIRHXLNFTGKDCMWB\";\r\n\r\n\t\t\tres += secret.slice(x, 26) + secret.slice(0, x);\r\n\t    } else if (rotorType === \"V\") {\r\n\t\t\tlet secret = \"VZBRGITYUPSDNHLXAWMJQOFECK\";\r\n\r\n\t\t\tres += secret.slice(x, 26) + secret.slice(0, x);\r\n\t    } else if (rotorType === \"VI\") {\r\n\t\t\tlet secret = \"JPGVOUMFYQBENHZRDKASXLICTW\";\r\n\r\n\t\t\tres += secret.slice(x, 26) + secret.slice(0, x);\r\n\t    } else if (rotorType === \"VII\") {\r\n\t\t\tlet secret = \"NZJHGRCXMYSWBOUFAIVLPEKQDT\";\r\n\r\n\t\t\tres += secret.slice(x, 26) + secret.slice(0, x);\r\n\t\t} else if (rotorType === \"VIII\") {\r\n\t\t\tlet secret = \"FKQHTLXOCBJSPDZRAMEWNIUYGV\";\r\n\r\n\t\t\tres += secret.slice(x, 26) + secret.slice(0, x);\r\n\t\t}\r\n\r\n\t    return res.split(\"\");\r\n\t},\r\n\r\n\t/** Get machine initial positions\r\n\t * @param {String} key\r\n\t * @returns {Array} - Array of alphabets\r\n\t */\r\n\tgetSecretkey: function (key) {\r\n\t\tlet alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n\t\tlet x = alphabet.indexOf(key);\r\n\r\n\t\tlet out = alphabet.slice(x, 26) + alphabet.slice(0, x);\r\n\r\n\t\treturn out.split(\"\");\r\n\t},\r\n\r\n\t/** Get plugboard positions\r\n\t * @param {String} plugboard\r\n\t * @returns {Array} - Array of alphabets\r\n\t */\r\n\tgetPlugboard: function (plugboard) {\r\n\t\tlet i = 0;\r\n\t\tlet j = 0;\r\n\t\tlet alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\r\n\r\n\t\twhile (j < (plugboard.length / 2)) {\r\n\t\t\tlet x = alphabet.indexOf(plugboard[i]);\r\n\t\t\tlet y = alphabet.indexOf(plugboard[i + 1]);\r\n\r\n\t\t\tif (x !== -1 && y !== -1) {\r\n\t\t\t\talphabet[x] = plugboard[i + 1];\r\n\t\t\t\talphabet[y] = plugboard[i];\r\n\t\t\t}\r\n\r\n\t\t\ti += 2;\r\n\t\t\tj++;\r\n\t\t}\r\n\r\n\t\treturn alphabet;\r\n\t},\r\n\r\n\t/**\r\n\t * Encrypts and decrypts with enigma cipher\r\n\t * @param {String} plaintext\r\n\t * @param {String} key\r\n\t * @param {String} rotorType\r\n\t * @param {String} wheel\r\n\t * @param {String} wiring\r\n\t * @returns {String} - Ciphertext\r\n\t */\r\n\tcipher: function (plaintext, key, rotorType, wheel, wiring) {\r\n\t\tif (string.isString(plaintext) && string.isString(key) && string.isString(wiring)) {\r\n\t\t\trotorType = rotorType.split(\" \");\r\n\t\t\tplaintext = string.removeNonAlphabet(plaintext);\r\n\t\t\tkey = string.removeNonAlphabet(key).slice(0, rotorType.length);\r\n\r\n\t\t\tlet alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n\t\t\tlet reflector = this.getReflector(wheel);\r\n\t\t\tlet plugboard = this.getPlugboard(wiring);\r\n\t\t\tlet notch = [];\r\n\t\t\tlet rotor = [];\r\n\t\t\tlet secretkey = [];\r\n\t\t\tlet out = [];\r\n\r\n\t\t\tfor (let i = 0; i < rotorType.length; i++) {\r\n\t\t\t\tnotch.push(this.getNotch(rotorType[i]));\r\n\t\t\t\trotor.push(this.getRotor(rotorType[i], key[i]));\r\n\t\t\t\tsecretkey.push(this.getSecretkey(key[i]));\r\n\t\t\t}\r\n\r\n\t\t\tfor (let j = 0; j < plaintext.length; j++) {\r\n\t\t\t\t// Shift last rotor\r\n\t\t\t\tlet a = rotor[rotor.length - 1].shift();\r\n\t\t\t\tlet b = secretkey[secretkey.length - 1].shift();\r\n\r\n\t\t\t\t// Check notch\r\n\t\t\t\tif (notch[rotor.length - 1].includes(b)) {\r\n\t\t\t\t\tlet turn = true;\r\n\r\n\t\t\t\t\tfor (let m = (rotor.length - 1); m > 0; m--) {\r\n\t\t\t\t\t\tif (turn) {\r\n\t\t\t\t\t\t\tlet c = rotor[m - 1].shift();\r\n\t\t\t\t\t\t\tlet d = secretkey[m - 1].shift();\r\n\r\n\t\t\t\t\t\t\trotor[m - 1].push(c);\r\n\t\t\t\t\t\t\tsecretkey[m - 1].push(d);\r\n\r\n\t\t\t\t\t\t\tif (!notch[m - 1].includes(d)) {\r\n\t\t\t\t\t\t\t\tturn = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\trotor[rotor.length - 1].push(a);\r\n\t\t\t\tsecretkey[secretkey.length - 1].push(b);\r\n\r\n\t\t\t\tlet char = plaintext[j];\r\n\r\n\t\t\t\t// Plugboard substitution\r\n\t\t\t\tif (char != plugboard[alphabet.indexOf(char)]) {\r\n\t\t\t\t\tchar = plugboard[alphabet.indexOf(char)];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// To reflector\r\n\t\t\t\tchar = secretkey[secretkey.length - 1][alphabet.indexOf(char)];\r\n\t\t\t\tchar = rotor[rotor.length - 1][secretkey[secretkey.length - 1].indexOf(char)];\r\n\r\n\t\t\t\tfor (let k = (rotor.length - 2); k >= 0; k--) {\r\n\t\t\t\t\tchar = secretkey[k][secretkey[k + 1].indexOf(char)];\r\n\t\t\t\t\tchar = rotor[k][secretkey[k].indexOf(char)];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Reflector\r\n\t\t\t\tchar = reflector[string.mod((alphabet.indexOf(char) - string.toNumbers(secretkey[0][0])[0]), 26)];\r\n\r\n\t\t\t\t// From reflector\r\n\t\t\t\tchar = secretkey[0][alphabet.indexOf(char)];\r\n\t\t\t\tchar = secretkey[0][rotor[0].indexOf(char)];\r\n\r\n\t\t\t\tfor (let l = 1; l < rotor.length; l++) {\r\n\t\t\t\t\tchar = secretkey[l][secretkey[l - 1].indexOf(char)];\r\n\t\t\t\t\tchar = secretkey[l][rotor[l].indexOf(char)];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// ETW\r\n\t\t\t\tchar = alphabet[secretkey[rotor.length - 1].indexOf(char)];\r\n\r\n\t\t\t\t// Plugboard substitution\r\n\t\t\t\tif (char != plugboard[plugboard.indexOf(char)]) {\r\n\t\t\t\t\tchar = plugboard[plugboard.indexOf(char)];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tout.push(char)\r\n\t\t\t}\r\n\r\n\t\t\treturn out.join('');\r\n\t\t} else {\r\n            return \"INPUT ERROR\";\r\n\t\t}\r\n\t}\r\n};","import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./Encrypt.css\";\r\n\r\nlet str = require(\"../../backend/util/string\")\r\nlet vigenere = require(\"../../backend/vigenere\");\r\nlet fVigenere = require(\"../../backend/fullVigenere\");\r\nlet aKeyVigenere = require(\"../../backend/autoKeyVigenere\");\r\nlet eVigenere = require(\"../../backend/extendedVigenere\");\r\nlet playfair = require(\"../../backend/playfair\");\r\nlet sEncryption = require(\"../../backend/superEncryption\");\r\nlet affine = require(\"../../backend/affine\");\r\nlet hill = require(\"../../backend/hill\");\r\n\r\nconst selectStyles = {\r\n  option: (provided, state) => ({\r\n    ...provided,\r\n    borderRadius: \"10px\",\r\n    color: \"#000000\"\r\n  })\r\n}\r\n\r\nconst selectOptions = [\r\n  { value: vigenere, label: \"Vigenere Standard\" },\r\n  { value: fVigenere, label: \"Full Vigenere Cipher\" },\r\n  { value: aKeyVigenere, label: \"Auto-Key Vigenere Cipher\" },\r\n  { value: eVigenere, label: \"Extended Vigenere Cipher\" },\r\n  { value: playfair, label: \"Playfair Cipher\" },\r\n  { value: sEncryption, label: \"Super Encription\" },\r\n  { value: affine, label: \"Affine Cipher\" },\r\n  { value: hill, label: \"Hill Cipher\" }\r\n]\r\n\r\nconst truncate = (input) => {\r\n  return (input.length > 10) ? input.substr(0, 9) + '...' : input;\r\n}\r\n\r\nlet fileReader;\r\n\r\nclass Encrypt extends Component {\r\n  state = {\r\n    method: undefined,\r\n    methodName: \"\",\r\n    selectedFile: undefined,\r\n    fileType: \"\",\r\n    fileName: \"\",\r\n    text: \"\",\r\n    key: \"\"\r\n  }\r\n\r\n  onTextChange = event => {\r\n    this.setState({ text: event.target.value })\r\n  }\r\n\r\n  onKeyChange = event => {\r\n    this.setState({ key: event.target.value })\r\n  }\r\n\r\n  onMethodChange = event => {\r\n    this.setState({ method: event.value })\r\n    this.setState({ methodName: event.label })\r\n    this.setState({ key: \"\" })\r\n\r\n    if (event.value == vigenere || event.value == fVigenere || event.value == aKeyVigenere || event.value == eVigenere || event.value == playfair || event.value == sEncryption) {\r\n      document.getElementById(\"key-input\").placeholder = \"random text (example: secret key)\";\r\n    } else if (event.value == affine) {\r\n      document.getElementById(\"key-input\").placeholder = \"relatively prime number of 26 and shift magnitude (example: 7 10)\";\r\n    } else if (event.value == hill) {\r\n      document.getElementById(\"key-input\").placeholder = \"3x3 matrix (example: 17 17 5 21 18 21 2 2 19)\";\r\n    }\r\n  }\r\n\r\n  // On file select (from the pop up)\r\n  onFileChange = event => {\r\n    if (event.target.files[0] != undefined) {\r\n      this.setState({ selectedFile: event.target.files[0] });\r\n      this.setState({ fileName: event.target.files[0].name });\r\n      this.setState({ fileType: event.target.files[0].type });\r\n    }\r\n  }\r\n\r\n  handleFileRead = (e) => {\r\n    const content = fileReader.result;\r\n\r\n    if (this.state.fileType === \"text/plain\") {\r\n      let encrypted = this.state.method.encrypt(content, this.state.key);\r\n\r\n      encrypted = str.formatOutput(encrypted, 5);\r\n      document.getElementById('methodResult').innerHTML = this.state.methodName;\r\n      document.getElementById('plaintextResult').innerHTML = this.state.text;\r\n      document.getElementById('encryptedResult').innerHTML = encrypted;\r\n      document.getElementById(\"modal-result\").style.display = \"block\";\r\n    } else {\r\n      const typedArray = new Uint8Array(content);\r\n      const array = [...typedArray];\r\n\r\n      let encrypted = this.state.method.encrypt(array, this.state.key);\r\n\r\n      const encryptedBuffer = new Uint8Array(encrypted);\r\n\r\n      this.downloadExtended(encryptedBuffer);\r\n    }\r\n  }\r\n\r\n  downloadExtended = (content) => {\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([content], {\r\n      type: this.state.fileType,\r\n    });\r\n\r\n    element.className = \"download-file\";\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"Encrypted-\" + this.state.fileName;\r\n    document.body.appendChild(element);\r\n    element.click();\r\n    element.remove();\r\n  }\r\n\r\n  handleEncrypt = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.method !== undefined && this.state.key !== \"\") {\r\n      if (this.state.text !== \"\") {\r\n        let encrypted = this.state.method.encrypt(this.state.text, this.state.key);\r\n\r\n        encrypted = str.formatOutput(encrypted, 5);\r\n        document.getElementById('methodResult').innerHTML = this.state.methodName;\r\n        document.getElementById('plaintextResult').innerHTML = this.state.text;\r\n        document.getElementById('encryptedResult').innerHTML = encrypted;\r\n        document.getElementById(\"modal-result\").style.display = \"block\";\r\n      } else if (this.state.selectedFile !== undefined) {\r\n        fileReader = new FileReader();\r\n        fileReader.onloadend = this.handleFileRead;\r\n\r\n        if (this.state.method == eVigenere) {\r\n          fileReader.readAsArrayBuffer(this.state.selectedFile);\r\n        } else {\r\n          fileReader.readAsText(this.state.selectedFile);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  download = () => {\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([document.getElementById(\"encryptedResult\").value], {\r\n      type: \"text/plain;charset=utf-8\"\r\n    });\r\n\r\n    element.className = \"download-file\";\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"result.txt\";\r\n    document.body.appendChild(element);\r\n    element.click();\r\n    element.remove();\r\n  }\r\n\r\n  closeModal() {\r\n    document.getElementById(\"modal-result\").style.display = \"none\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Select\r\n          className=\"method-droplist\"\r\n          placeholder=\"select encryption method\"\r\n          styles={selectStyles}\r\n          theme={(theme) => ({\r\n            ...theme,\r\n            borderRadius: \"10px\",\r\n            colors: {\r\n              ...theme.colors,\r\n              primary50: \"#95e8e6\",\r\n              primary25: \"#b0f1f7\",\r\n              primary: \"#b0f7f0\"\r\n            }\r\n          })}\r\n          options={selectOptions}\r\n          onChange={this.onMethodChange}\r\n        />\r\n        <div className=\"wrapper-encrypt\">\r\n          <div className=\"container-encrypt\">\r\n            <form className=\"encrypt-form\" onSubmit={this.handleEncrypt}>\r\n              <label>Text</label>\r\n              <textarea id=\"text-input\" placeholder=\"your plaintext (example: Kripto)\" type=\"text\" name=\"text\" rows=\"6\" onChange={this.onTextChange} value={this.state.text}/>\r\n\r\n              <label>Key</label>\r\n              <input id=\"key-input\" placeholder=\"please select encryption method\" type=\"text\" name=\"key\" onChange={this.onKeyChange} value={this.state.key}/>\r\n\r\n              <div className=\"button-container\">\r\n                <input id=\"file-input\" type=\"file\" name=\"file\" className=\"upload-button\" onChange={this.onFileChange} />\r\n                <label htmlFor=\"file-input\">\r\n                  <FontAwesomeIcon icon={this.state.fileName === \"\" ? \"file-upload\" : \"file\"} /> &nbsp; {this.state.fileName === \"\" ? \"Upload\" : truncate(this.state.fileName)}\r\n                </label>\r\n                <button className=\"encrypt-button\" type=\"submit\">\r\n                  <FontAwesomeIcon icon=\"lock\" /> &nbsp; Encrypt\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div id=\"modal-result\" className=\"modal-encrypt\">\r\n          <div className=\"modal-content-container\">\r\n            <div className=\"modal-content\">\r\n              <p id=\"message\"><span id=\"methodResult\"></span> Result</p>\r\n\r\n              <label className=\"messageResult\">Plaintext</label>\r\n              <textarea id=\"plaintextResult\" className=\"encryptedResult\" type=\"text\" readOnly rows=\"6\"></textarea>\r\n\r\n              <label className=\"messageResult\">Ciphertext</label>\r\n              <textarea id=\"encryptedResult\" className=\"encryptedResult\" type=\"text\" readOnly rows=\"6\"></textarea>\r\n\r\n              <div className=\"button-container\">\r\n                <button className=\"download-button\" onClick={this.download}>\r\n                  <FontAwesomeIcon icon=\"cloud-download-alt\" /> &nbsp; Download\r\n                </button>\r\n                <button className=\"close-button\" onClick={this.closeModal}>\r\n                  <FontAwesomeIcon icon=\"times-circle\" /> &nbsp; Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Encrypt;\r\n","import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./Decrypt.css\";\r\n\r\nlet vigenere = require(\"../../backend/vigenere\");\r\nlet fVigenere = require(\"../../backend/fullVigenere\");\r\nlet aKeyVigenere = require(\"../../backend/autoKeyVigenere\");\r\nlet eVigenere = require(\"../../backend/extendedVigenere\");\r\nlet playfair = require(\"../../backend/playfair\");\r\nlet sEncryption = require(\"../../backend/superEncryption\");\r\nlet affine = require(\"../../backend/affine\");\r\nlet hill = require(\"../../backend/hill\");\r\n\r\nconst selectStyles = {\r\n  option: (provided, state) => ({\r\n    ...provided,\r\n    borderRadius: \"10px\",\r\n    color: \"#000000\"\r\n  })\r\n}\r\n\r\nconst selectOptions = [\r\n  { value: vigenere, label: \"Vigenere Standard\" },\r\n  { value: fVigenere, label: \"Full Vigenere Cipher\" },\r\n  { value: aKeyVigenere, label: \"Auto-Key Vigenere Cipher\" },\r\n  { value: eVigenere, label: \"Extended Vigenere Cipher\" },\r\n  { value: playfair, label: \"Playfair Cipher\" },\r\n  { value: sEncryption, label: \"Super Encription\" },\r\n  { value: affine, label: \"Affine Cipher\" },\r\n  { value: hill, label: \"Hill Cipher\" }\r\n]\r\n\r\nconst truncate = (input) => {\r\n  return (input.length > 10) ? input.substr(0, 9) + '...' : input;\r\n}\r\n\r\nlet fileReader;\r\n\r\nclass Decrypt extends Component {\r\n  state = {\r\n    method: undefined,\r\n    methodName: \"\",\r\n    selectedFile: undefined,\r\n    fileType: \"\",\r\n    fileName: \"\",\r\n    text: \"\",\r\n    key: \"\"\r\n  }\r\n\r\n  onTextChange = event => {\r\n    this.setState({ text: event.target.value })\r\n  }\r\n\r\n  onKeyChange = event => {\r\n    this.setState({ key: event.target.value })\r\n  }\r\n\r\n  onMethodChange = event => {\r\n    this.setState({ method: event.value })\r\n    this.setState({ methodName: event.label })\r\n    this.setState({ key: \"\" })\r\n\r\n    if (event.value == vigenere || event.value == fVigenere || event.value == aKeyVigenere || event.value == eVigenere || event.value == playfair || event.value == sEncryption) {\r\n      document.getElementById(\"key-input\").placeholder = \"random text (example: secret key)\";\r\n    } else if (event.value == affine) {\r\n      document.getElementById(\"key-input\").placeholder = \"relatively prime number of 26 and shift magnitude (example: 7 10)\";\r\n    } else if (event.value == hill) {\r\n      document.getElementById(\"key-input\").placeholder = \"3x3 matrix (example: 17 17 5 21 18 21 2 2 19)\";\r\n    }\r\n  }\r\n\r\n  // On file select (from the pop up)\r\n  onFileChange = event => {\r\n    if (event.target.files[0] != undefined) {\r\n      this.setState({ selectedFile: event.target.files[0] });\r\n      this.setState({ fileName: event.target.files[0].name })\r\n      this.setState({ fileType: event.target.files[0].type });\r\n    }\r\n  }\r\n\r\n  handleFileRead = (e) => {\r\n    const content = fileReader.result;\r\n\r\n    if (this.state.fileType === \"text/plain\") {\r\n      let decrypted = this.state.method.decrypt(content, this.state.key);\r\n\r\n      document.getElementById('methodResult').innerHTML = this.state.methodName;\r\n      document.getElementById('ciphertextResult').innerHTML = this.state.text;\r\n      document.getElementById('decryptedResult').innerHTML = decrypted;\r\n      document.getElementById(\"modal-result\").style.display = \"block\";\r\n    } else {\r\n      const typedArray = new Uint8Array(content);\r\n      const array = [...typedArray];\r\n\r\n      let decrypted = this.state.method.decrypt(array, this.state.key);\r\n\r\n      const decryptedBuffer = new Uint8Array(decrypted);\r\n\r\n      this.downloadExtended(decryptedBuffer);\r\n    }\r\n  }\r\n\r\n  downloadExtended = (content) => {\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([content], {\r\n      type: this.state.fileType,\r\n    });\r\n\r\n    element.className = \"download-file\";\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"Decrypted-\" + this.state.fileName;\r\n    document.body.appendChild(element);\r\n    element.click();\r\n    element.remove();\r\n  }\r\n\r\n  handleDecrypt = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.method !== undefined && this.state.key !== \"\") {\r\n      if (this.state.text !== \"\") {\r\n        document.getElementById('methodResult').innerHTML = this.state.methodName;\r\n        document.getElementById('ciphertextResult').innerHTML = this.state.text;\r\n        document.getElementById('decryptedResult').innerHTML = this.state.method.decrypt(this.state.text, this.state.key);\r\n        document.getElementById(\"modal-result\").style.display = \"block\";\r\n      } else if (this.state.selectedFile !== undefined) {\r\n        fileReader = new FileReader();\r\n        fileReader.onloadend = this.handleFileRead;\r\n\r\n        if (this.state.method == eVigenere) {\r\n          fileReader.readAsArrayBuffer(this.state.selectedFile);\r\n        } else {\r\n          fileReader.readAsText(this.state.selectedFile);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  download = () => {\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([document.getElementById(\"decryptedResult\").value], {\r\n      type: \"text/plain;charset=utf-8\"\r\n    });\r\n\r\n    element.className = \"download-file\";\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"result.txt\";\r\n    document.body.appendChild(element);\r\n    element.click();\r\n    element.remove();\r\n  }\r\n\r\n  closeModal() {\r\n    document.getElementById(\"modal-result\").style.display = \"none\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Select\r\n          className=\"method-droplist\"\r\n          placeholder=\"select decryption method\"\r\n          styles={selectStyles}\r\n          theme={(theme) => ({\r\n            ...theme,\r\n            borderRadius: \"10px\",\r\n            colors: {\r\n              ...theme.colors,\r\n              primary50: \"#95e8e6\",\r\n              primary25: \"#b0f1f7\",\r\n              primary: \"#b0f7f0\"\r\n            }\r\n          })}\r\n          options={selectOptions}\r\n          onChange={this.onMethodChange}\r\n        />\r\n        <div className=\"wrapper-decrypt\">\r\n          <div className=\"container-decrypt\">\r\n            <form className=\"decrypt-form\" onSubmit={this.handleDecrypt}>\r\n              <label htmlFor=\"text\" id=\"label-account\">Text</label>\r\n              <textarea id=\"text-input\" placeholder=\"your ciphertext (example: CZOLNE)\" type=\"text\" name=\"text\" rows=\"6\" onChange={this.onTextChange} value={this.state.text}/>\r\n\r\n              <label htmlFor=\"key\" id=\"label-key\">Key</label>\r\n              <input id=\"key-input\" placeholder=\"please select decryption method\" type=\"text\" name=\"key\" onChange={this.onKeyChange} value={this.state.key}/>\r\n\r\n              <div className=\"button-container\">\r\n                <input id=\"file-input\" type=\"file\" name=\"file\" className=\"upload-button\" onChange={this.onFileChange} />\r\n                <label htmlFor=\"file-input\">\r\n                  <FontAwesomeIcon icon={this.state.fileName === \"\" ? \"file-upload\" : \"file\"} /> &nbsp; {this.state.fileName === \"\" ? \"Upload\" : truncate(this.state.fileName)}\r\n                </label>\r\n                <button className=\"decrypt-button\" type=\"submit\">\r\n                  <FontAwesomeIcon icon=\"lock-open\"/> &nbsp; Decrypt\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div id=\"modal-result\" className=\"modal-decrypt\">\r\n          <div className=\"modal-content-container\">\r\n            <div className=\"modal-content\">\r\n              <p id=\"message\"><span id=\"methodResult\"></span> Result</p>\r\n\r\n              <label className=\"messageResult\">Ciphertext</label>\r\n              <textarea id=\"ciphertextResult\" className=\"decryptedResult\" type=\"text\" readOnly rows=\"6\"></textarea>\r\n\r\n              <label className=\"messageResult\">Plaintext</label>\r\n              <textarea id=\"decryptedResult\" className=\"decryptedResult\" type=\"text\" readOnly rows=\"6\"></textarea>\r\n              <div className=\"button-container\">\r\n                <button className=\"download-button\" onClick={this.download}>\r\n                  <FontAwesomeIcon icon=\"cloud-download-alt\" /> &nbsp; Download\r\n                </button>\r\n                <button className=\"close-button\" onClick={this.closeModal}>\r\n                  <FontAwesomeIcon icon=\"times-circle\" /> &nbsp; Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Decrypt;\r\n","import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./Enigma.css\";\r\n\r\nlet enigma = require(\"../../backend/enigma\");\r\n\r\nconst selectStyles = {\r\n  option: (provided, state) => ({\r\n    ...provided,\r\n    borderRadius: \"10px\",\r\n    color: \"#000000\"\r\n  })\r\n};\r\n\r\nconst selectWheel = [\r\n  { value: \"UKW\", label: \"UKW\" },\r\n  { value: \"UKW-K\", label: \"UKW-K\" },\r\n  { value: \"Reflector A\", label: \"Reflector A\" },\r\n  { value: \"Reflector B\", label: \"Reflector B\" },\r\n  { value: \"Reflector C\", label: \"Reflector C\" },\r\n  { value: \"Reflector B Thin\", label: \"Reflector B Thin\" },\r\n  { value: \"Reflector C Thin\", label: \"Reflector C Thin\" }\r\n];\r\n\r\nconst truncate = (input) => {\r\n  return (input.length > 10) ? input.substr(0, 9) + '...' : input;\r\n}\r\n\r\nlet fileReader;\r\n\r\nclass Enigma extends Component {\r\n  state = {\r\n    method: enigma,\r\n    selectedFile: undefined,\r\n    fileName: \"\",\r\n    text: \"\",\r\n    key: \"\",\r\n    rotorType: \"\",\r\n    wheel: \"Reflector B\",\r\n    wiring: \"\"\r\n  }\r\n\r\n  // On file select (from the pop up)\r\n  onFileChange = event => {\r\n    if (event.target.files[0] != undefined) {\r\n      this.setState({ selectedFile: event.target.files[0] });\r\n      this.setState({ fileName: event.target.files[0].name })\r\n    }\r\n  }\r\n\r\n  onTextChange = event => {\r\n    this.setState({ text: event.target.value })\r\n  }\r\n\r\n  onKeyChange = event => {\r\n    this.setState({ key: event.target.value })\r\n  }\r\n\r\n  onRotorChange = event => {\r\n    this.setState({ rotorType: event.target.value })\r\n  }\r\n\r\n  onWheelChange = event => {\r\n    this.setState({ wheel: event.value })\r\n  }\r\n\r\n  onWiringChange = event => {\r\n    this.setState({ wiring: event.target.value })\r\n  }\r\n\r\n  handleFileRead = (e) => {\r\n    const content = fileReader.result;\r\n\r\n    document.getElementById('plaintextResult').innerHTML = content;\r\n    document.getElementById('ciphertextResult').innerHTML = this.state.method.cipher(content, this.state.key, this.state.rotorType, this.state.wheel, this.state.wiring);\r\n    document.getElementById(\"modal-result\").style.display = \"block\";\r\n  }\r\n\r\n  handleCipher = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.method !== undefined && this.state.key !== \"\") {\r\n      console.log(this.state.method)\r\n\r\n      if (this.state.text !== \"\") {\r\n        console.log(this.state.text)\r\n        console.log(this.state.key)\r\n        console.log(this.state.rotorType)\r\n        console.log(this.state.wheel)\r\n        console.log(this.state.wiring)\r\n        document.getElementById('plaintextResult').innerHTML = this.state.text\r\n        document.getElementById('ciphertextResult').innerHTML = this.state.method.cipher(this.state.text, this.state.key, this.state.rotorType, this.state.wheel, this.state.wiring);\r\n        document.getElementById(\"modal-result\").style.display = \"block\";\r\n      }\r\n      else if (this.state.selectedFile !== undefined) {\r\n        console.log(this.state.selectedFile);\r\n        fileReader = new FileReader();\r\n        fileReader.onloadend = this.handleFileRead;\r\n    \t\tfileReader.readAsText(this.state.selectedFile);\r\n      }\r\n    }\r\n  }\r\n\r\n  download = () => {\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([document.getElementById(\"enigmaResult\").value], {\r\n      type: \"text/plain;charset=utf-8\",\r\n    });\r\n\r\n    element.className = \"download-file\";\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"result.txt\";\r\n    document.body.appendChild(element);\r\n    element.click();\r\n    element.remove();\r\n  }\r\n\r\n  closeModal() {\r\n    document.getElementById(\"modal-result\").style.display = \"none\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Select\r\n          className=\"method-droplist\"\r\n          placeholder=\"select reflector\"\r\n          styles={selectStyles}\r\n          theme={(theme) => ({\r\n            ...theme,\r\n            borderRadius: \"10px\",\r\n            colors: {\r\n              ...theme.colors,\r\n              primary50: \"#95e8e6\",\r\n              primary25: \"#b0f1f7\",\r\n              primary: \"#b0f7f0\",\r\n            }\r\n          })}\r\n          options={selectWheel}\r\n          onChange={this.onWheelChange}\r\n          defaultValue={{ value: \"Reflector B\", label: \"Reflector B\" }}\r\n        />\r\n        <div className=\"wrapper-enigma\">\r\n          <div className=\"container-enigma\">\r\n            <form className=\"enigma-form\" onSubmit={this.handleCipher}>\r\n              <label>Text</label>\r\n              <textarea id=\"text-input\" placeholder=\"your text (example: Hello World)\" type=\"text\" name=\"text\" rows=\"6\" onChange={this.onTextChange} value={this.state.text}/>\r\n\r\n              <label>Key</label>\r\n              <input id=\"key-input\" placeholder=\"rotors initial position (example: A A A)\" type=\"text\" name=\"key\" onChange={this.onKeyChange} value={this.state.key} />\r\n\r\n              <label>Rotors</label>\r\n              <input id=\"rotor-input\" placeholder=\"rotors type from left to right divided by spaces (example: I II III IV V VI VII VIII)\" type=\"text\" name=\"rotor\" onChange={this.onRotorChange} value={this.state.rotorType} />\r\n\r\n              <label>Plugboard</label>\r\n              <input id=\"plug-input\" placeholder=\"swap additional letters (example: AB GZ CD KT)\" type=\"text\" name=\"plugboard\" onChange={this.onWiringChange} value={this.state.wiring} />\r\n\r\n              <div className=\"button-container\">\r\n                <input id=\"file-input\" type=\"file\" name=\"file\" className=\"upload-button\" onChange={this.onFileChange} />\r\n                <label htmlFor=\"file-input\">\r\n                  <FontAwesomeIcon icon={this.state.fileName === \"\" ? \"file-upload\" : \"file\"} /> &nbsp; {this.state.fileName === \"\" ? \"Upload\" : truncate(this.state.fileName)}\r\n                </label>\r\n                <button className=\"enigma-button\" type=\"submit\">\r\n                  <FontAwesomeIcon icon=\"unlock\" /> &nbsp; Cipher\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div id=\"modal-result\" className=\"modal-enigma\">\r\n          <div className=\"modal-content-container\">\r\n            <div className=\"modal-content\">\r\n              <p id=\"message\">Enigma Cipher Result</p>\r\n\r\n              <label className=\"messageResult\">Plaintext</label>\r\n              <textarea id=\"plaintextResult\" className=\"enigmaResult\" type=\"text\" readOnly rows=\"6\"></textarea>\r\n\r\n              <label className=\"messageResult\">Ciphertext</label>\r\n              <textarea id=\"ciphertextResult\" className=\"enigmaResult\" type=\"text\" readOnly rows=\"6\"></textarea>\r\n\r\n              <div className=\"button-container\">\r\n                <button className=\"download-button\" onClick={this.download}>\r\n                  <FontAwesomeIcon icon=\"cloud-download-alt\" /> &nbsp; Download\r\n                </button>\r\n                <button className=\"close-button\" onClick={this.closeModal}>\r\n                  <FontAwesomeIcon icon=\"times-circle\" /> &nbsp; Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Enigma;\r\n","import React, { Component } from \"react\";\r\nimport \"./BottomBar.css\";\r\n\r\nclass BottomBar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"bottombar\">\r\n        <div className=\"bottombar-wrapper\">\r\n          <footer>\r\n            Copyright &copy; 2020 -&nbsp;\r\n            <a className=\"bottombar-a\" href=\"https://github.com/xio84\">xio84</a>\r\n            &nbsp;&amp;&nbsp;\r\n            <a className=\"bottombar-a\" href=\"https://github.com/vincentbudianto\">vincent VB</a></footer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BottomBar;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./NavigationBar.css\";\r\n\r\nclass NavigationBar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <div className=\"navbar-wrapper\">\r\n          <Link className=\"navbar-a\" to=\"/title\">\r\n            <div className=\"navbar-button\">\r\n              <font color=\"white\">Home</font>\r\n            </div>\r\n          </Link>\r\n\r\n          <Link className=\"navbar-a\" to=\"/encrypt\">\r\n            <div className=\"navbar-button\">\r\n              <font color=\"white\">Encryption</font>\r\n            </div>\r\n          </Link>\r\n\r\n          <Link className=\"navbar-a\" to=\"/decrypt\">\r\n            <div className=\"navbar-button\">\r\n              <font color=\"white\">Decryption</font>\r\n            </div>\r\n          </Link>\r\n\r\n          <Link className=\"navbar-a\" to=\"/enigma\">\r\n            <div className=\"navbar-button\">\r\n              <font color=\"white\">Enigma Machine</font>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavigationBar;\r\n","import React, { Component } from \"react\";\r\nimport logo from \"../../logo.png\";\r\nimport \"./Title.css\";\r\n\r\nclass Title extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"wrapper-title\">\r\n          <div>\r\n            <img src={logo} className=\"logo\" alt=\"logo\" width=\"40%\" />\r\n          </div>\r\n\r\n          <div className=\"text-title1\">Crypto Helper</div>\r\n\r\n          <div className=\"text-title2\">Encryption and Decryption Tools</div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport BottomBar from \"../BottomBar/BottomBar\";\r\nimport NavigationBar from \"../NavigationBar/NavigationBar\";\r\nimport Title from \"../Title/Title\";\r\nimport Encrypt from \"../Encrypt/Encrypt\";\r\nimport Decrypt from \"../Decrypt/Decrypt\";\r\nimport Enigma from \"../Enigma/Enigma\";\r\n\r\nfunction Router() {\r\n\treturn (\r\n    <main>\r\n      <NavigationBar></NavigationBar>\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => <Redirect to=\"/title\" />} />\r\n        <Route exact path=\"/title\" component={Title} />\r\n        <Route exact path=\"/encrypt\" component={Encrypt} />\r\n        <Route exact path=\"/decrypt\" component={Decrypt} />\r\n        <Route exact path=\"/enigma\" component={Enigma} />\r\n        <Route exact path=\"/*\" component={Title} />\r\n      </Switch>\r\n      <BottomBar></BottomBar>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Router;","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    align-items: center;\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    transition: all 0.25s linear;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    height: 100vh;\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: BlinkMacSystemFont, -apple-system, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;\r\n    transition: all 0.25s linear;\r\n  }\r\n\r\n  .logo {\r\n    filter: ${({ theme }) => theme.filter};\r\n  }\r\n  `;","export const lightTheme = {\r\n  body: \"#F2F2F2\",\r\n  text: \"#363537\",\r\n  toggleBorder: \"#FFF\",\r\n  gradient: \"linear-gradient(#39598A, #79D7ED)\",\r\n  filter: \"invert(20%)\"\r\n};\r\n\r\nexport const darkTheme = {\r\n  body: \"#363537\",\r\n  text: \"#FAFAFA\",\r\n  toggleBorder: \"#6B8096\",\r\n  gradient: \"linear-gradient(#091236, #1E215D)\",\r\n  filter: \"invert(90%)\"\r\n};\r\n","import React from \"react\";\r\nimport { func, string } from \"prop-types\";\r\nimport \"./switch.css\";\r\n\r\nconst Switch = ({ theme, toggleTheme }) => {\r\n  const isLight = theme === \"light\";\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <input readOnly onClick={toggleTheme} type=\"checkbox\" id=\"hide-checkbox\" checked={isLight ? true : false}></input>\r\n      <label htmlFor=\"hide-checkbox\" className=\"toggle\">\r\n        <span className=\"toggle-button\">\r\n          <span className=\"crater crater-1\"></span>\r\n          <span className=\"crater crater-2\"></span>\r\n          <span className=\"crater crater-3\"></span>\r\n          <span className=\"crater crater-4\"></span>\r\n          <span className=\"crater crater-5\"></span>\r\n          <span className=\"crater crater-6\"></span>\r\n          <span className=\"crater crater-7\"></span>\r\n        </span>\r\n        <span className=\"star star-1\"></span>\r\n        <span className=\"star star-2\"></span>\r\n        <span className=\"star star-3\"></span>\r\n        <span className=\"star star-4\"></span>\r\n        <span className=\"star star-5\"></span>\r\n        <span className=\"star star-6\"></span>\r\n        <span className=\"star star-7\"></span>\r\n        <span className=\"star star-8\"></span>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nSwitch.propTypes = {\r\n  theme: string.isRequired,\r\n  toggleTheme: func.isRequired,\r\n};\r\n\r\nexport default Switch;\r\n","import React from \"react\";\nimport Particles from \"react-particles-js\";\nimport Router from './Components/Routes/Router';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyles } from \"./global\";\nimport { lightTheme, darkTheme } from \"./theme\";\nimport { useDarkMode } from \"./useDarkMode\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faLock, faLockOpen, faUnlock, faFile, faFileUpload, faCloudDownloadAlt, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport Switch from \"./Components/switch\";\nimport './App.css';\n\nlibrary.add(faLock, faLockOpen, faUnlock, faFile, faFileUpload, faCloudDownloadAlt, faTimesCircle);\n\nfunction App() {\n  const [theme, toggleTheme, componentMounted] = useDarkMode();\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\n  let lineColor = theme === \"light\" ? \"#6B2DBA\" : \"#3CA9D1\";\n\n  if (!componentMounted) {\n    return <div/>;\n  }\n\n  return (\n    <ThemeProvider theme={themeMode}>\n      <Particles\n        className=\"particles\"\n        params={{\n          particles: {\n            number: {\n              value: 150,\n            },\n            line_linked: {\n              shadow: {\n                enable: true,\n                color: lineColor,\n                blur: 3,\n              },\n            },\n          },\n          interactivity: {\n            events: {\n              onhover: {\n                enable: true,\n                mode: \"grab\",\n              },\n              onclick: {\n                enable: true,\n                mode: \"push\",\n              },\n            },\n          },\n        }}\n      />\n      <>\n        <GlobalStyles />\n        <Switch theme={theme} toggleTheme={toggleTheme} />\n        <div>\n          <BrowserRouter basename=\"/Crypto-Helper\">\n            <Router />\n          </BrowserRouter>\n        </div>\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useDarkMode = () => {\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const [componentMounted, setComponentMounted] = useState(false);\r\n\r\n  const setMode = (mode) => {\r\n    window.localStorage.setItem(\"theme\", mode);\r\n    setTheme(mode);\r\n  };\r\n\r\n  const toggleTheme = () => {\r\n    if (theme === \"light\") {\r\n      setMode(\"dark\");\r\n    } else {\r\n      setMode(\"light\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const localTheme = window.localStorage.getItem(\"theme\");\r\n    window.matchMedia &&\r\n    window.matchMedia(\"(prefers-color-scheme: dark)\").matches &&\r\n    !localTheme\r\n      ? setMode(\"dark\")\r\n      : localTheme\r\n      ? setTheme(localTheme)\r\n      : setMode(\"light\");\r\n    setComponentMounted(true);\r\n  }, []);\r\n\r\n  return [theme, toggleTheme, componentMounted];\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* Vigenere encription & decription */\r\nlet string = require('./util/string')\r\n\r\nmodule.exports = {\r\n    /**\r\n     * Encrypts with formula : Ci = Pi + ki (mod 26)\r\n     * @param {String} plaintext\r\n     * @param {String} key\r\n     * @returns {String} - Ciphertext\r\n     */\r\n    encrypt: function(plaintext, key) {\r\n        if (string.isString(plaintext) && string.isString(key)) {\r\n            // Convert string to order number\r\n            let P = string.toNumbers(plaintext);\r\n            let K = string.toNumbers(key);\r\n\r\n            for (let i = 0; i < P.length; i++) {\r\n                P[i] = string.mod((P[i] + K[string.mod(i, K.length)]), 26);\r\n            }\r\n\r\n            let out = string.toAlphabet(P);\r\n\r\n            return out;\r\n        } else {\r\n            return \"INPUT ERROR\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Decrypts with formula : Pi = Ci - ki (mod 26)\r\n     * @param {String} ciphertext\r\n     * @param {String} key\r\n     * @returns {String} - Plaintext\r\n     */\r\n    decrypt: function(ciphertext, key) {\r\n        if (string.isString(ciphertext) && string.isString(key)) {\r\n            // Convert string to order number\r\n            let C = string.toNumbers(ciphertext);\r\n            let K = string.toNumbers(key);\r\n\r\n            for (let i = 0; i < C.length; i++) {\r\n                C[i] = string.mod((C[i] - K[string.mod(i, K.length)]), 26);\r\n            }\r\n\r\n            let out = string.toAlphabet(C);\r\n\r\n            return out;\r\n        } else {\r\n            return \"INPUT ERROR\";\r\n        }\r\n    }\r\n}"],"sourceRoot":""}